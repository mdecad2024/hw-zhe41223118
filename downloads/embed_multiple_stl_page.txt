<script type="text/javascript" src="/static/jsc3d.js"></script>
<div id="models">
    <canvas height="300" id="cv1" style="border: 1px solid;" width="400"></canvas>
    <canvas height="300" id="cv2" style="border: 1px solid;" width="400"></canvas>
    <canvas height="300" id="cv3" style="border: 1px solid;" width="400"></canvas> <!-- 新增第三個 canvas -->
</div>
<div style="width: 400px; height: 70px; border: 1px solid;">
    Model Color:<input id="mdlClr" onchange="changeOption('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
    Back Color1:<input id="bckClr1" onchange="changeOption('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
    Back Color2:<input id="bckClr2" onchange="changeOption('BackgroundColor2',this.value)" type="color">
    <br> Render Mode:<select id="render" onchange="changeOption('RenderMode',this.value)">
        <option>Flat</option>
        <option>Point</option>
        <option>Wireframe</option>
        <option>Smooth</option>
    </select>
    Definition:<select id="defini" onchange="changeOption('Definition',this.value)">
        <option>Standard</option>
        <option>low</option>
        <option>high</option>
    </select>
</div>

<script type="text/javascript">
// <![CDATA[
var viewers = [];

function getOptions() {
    var mc = document.getElementById("mdlClr").value;
    var bc1 = document.getElementById("bckClr1").value;
    var bc2 = document.getElementById("bckClr2").value;
    var ren = document.getElementById("render").value;
    var def = document.getElementById("defini").value;
    return { ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def };
}

function readSTLfile(opt, canvasId) {
    var canvas = document.getElementById(canvasId);
    var viewer = new JSC3D.Viewer(canvas);
    viewer.setParameter('SceneUrl', opt.SceneUrl);
    viewer.setParameter('InitRotationX', 0);
    viewer.setParameter('InitRotationY', 0);
    viewer.setParameter('InitRotationZ', 0);
    viewer.setParameter('ModelColor', opt.ModelColor);
    viewer.setParameter('BackgroundColor1', opt.BackgroundColor1);
    viewer.setParameter('BackgroundColor2', opt.BackgroundColor2);
    viewer.setParameter('RenderMode', opt.RenderMode);
    viewer.setParameter('Definition', opt.Definition);
    viewer.init();
    viewer.update();
    viewers.push(viewer); // 保存 viewer 實例
}

function changeOption(strOpt, strValue) {
    console.log("change " + strOpt + " to " + strValue);
    viewers.forEach(viewer => {
        viewer.setParameter(strOpt, strValue);
        viewer.init();
        viewer.update();
    });
}

function openByGet() {
    var urls = [
        "https://s104.cycu.org/~41223118/41223118_part1.stl",
        "https://s104.cycu.org/~41223118/41223118_part2.stl",
        "https://s104.cycu.org/~41223118/41223118_part3.stl" // 新增的第三個模型 URL
    ];
    var opt = getOptions();
    urls.forEach((url, index) => {
        opt.SceneUrl = url;
        readSTLfile(opt, 'cv' + (index + 1)); // 動態生成 canvas ID
    });
}

openByGet();
// ]]>
</script>
